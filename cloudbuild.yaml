steps:
  # Step 1: Build Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      ['build', '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/python-app-vm/python-app-vm:latest', '.']

  # Step 2: Push Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      ['push', 'us-central1-docker.pkg.dev/$PROJECT_ID/python-app-vm/python-app-vm:latest']

  # Step 3: Create the VM with Docker installed (using startup-script)
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud compute instances create python-app-vm \
          --zone=us-central1-a \
          --machine-type=e2-medium \
          --image-family=ubuntu-2204-lts \
          --image-project=ubuntu-os-cloud \
          --tags=http-server \
          --metadata=startup-script='#!/bin/bash
            apt update
            apt install -y docker.io
            systemctl enable docker
            systemctl start docker
            docker pull us-central1-docker.pkg.dev/$PROJECT_ID/python-app-vm/python-app-vm:latest
            docker run -d --name python-app-vm -p 8080:8080 us-central1-docker.pkg.dev/$PROJECT_ID/python-app-vm/python-app-vm:latest
          '

images:
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/python-app-vm/python-app-vm:latest'

options:
  logging: CLOUD_LOGGING_ONLY
